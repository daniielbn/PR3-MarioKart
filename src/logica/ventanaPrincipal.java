package logica;

import java.awt.Dimension;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.Timer;
import logica.Fondo;
import logica.Personaje;

/**
 *
 * @author Daniel Brito Negrín
 * @version 1.0
 */
public class ventanaPrincipal extends javax.swing.JFrame {
    private Personaje personaje1; // Instancias de Personaje Mario
    private Personaje personaje2; // Instancias de Personaje Yoshi
    private Personaje personaje3; // Instancias de Personaje DonkeyKong
    private Personaje personaje4; // Instancias de Personaje Peach
    private Fondo fondo; // Instancias de Fondo
    public boolean carreraEnCurso = false; // Booleano que indica si hay una carrera en curso o no
    /**
     * Creates new form ventanaPrincipal
     */
    public ventanaPrincipal() {
        initComponents();
        iniciarPersonajesYFondo();
        cargarImagenes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Progress1 = new javax.swing.JProgressBar();
        Progress2 = new javax.swing.JProgressBar();
        Progress3 = new javax.swing.JProgressBar();
        Progress4 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonDescanso1 = new javax.swing.JButton();
        jButtonDescanso2 = new javax.swing.JButton();
        jButtonDescanso3 = new javax.swing.JButton();
        jButtonDescanso4 = new javax.swing.JButton();
        jButtonCapRojo = new javax.swing.JButton();
        jButtonCapVerde = new javax.swing.JButton();
        jButtonFondo = new javax.swing.JButton();
        jLabelMensajeFinal = new javax.swing.JLabel();
        jLabelMario = new javax.swing.JLabel();
        jLabelYoshi = new javax.swing.JLabel();
        jLabelDK = new javax.swing.JLabel();
        jLabelPeach = new javax.swing.JLabel();
        jButtonEmpezar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PR3 - Mario Kart - DBN");
        setAutoRequestFocus(false);
        setBackground(new java.awt.Color(204, 255, 255));

        Progress1.setForeground(new java.awt.Color(153, 0, 0));
        Progress1.setMaximum(20);
        Progress1.setPreferredSize(new java.awt.Dimension(146, 25));
        Progress1.setStringPainted(true);

        Progress2.setForeground(new java.awt.Color(0, 153, 51));
        Progress2.setMaximum(20);
        Progress2.setPreferredSize(new java.awt.Dimension(146, 25));
        Progress2.setStringPainted(true);

        Progress3.setForeground(new java.awt.Color(51, 51, 0));
        Progress3.setMaximum(20);
        Progress3.setPreferredSize(new java.awt.Dimension(146, 25));
        Progress3.setStringPainted(true);

        Progress4.setForeground(new java.awt.Color(204, 0, 204));
        Progress4.setMaximum(20);
        Progress4.setPreferredSize(new java.awt.Dimension(146, 25));
        Progress4.setStringPainted(true);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("0/3");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("0/3");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("0/3");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("0/3");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButtonDescanso1.setBackground(new java.awt.Color(153, 0, 0));
        jButtonDescanso1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonDescanso1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDescanso1.setText("Descansito");
        jButtonDescanso1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescanso1ActionPerformed(evt);
            }
        });

        jButtonDescanso2.setBackground(new java.awt.Color(0, 153, 51));
        jButtonDescanso2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonDescanso2.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDescanso2.setText("Descansito");
        jButtonDescanso2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescanso2ActionPerformed(evt);
            }
        });

        jButtonDescanso3.setBackground(new java.awt.Color(51, 51, 0));
        jButtonDescanso3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonDescanso3.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDescanso3.setText("Descansito");
        jButtonDescanso3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescanso3ActionPerformed(evt);
            }
        });

        jButtonDescanso4.setBackground(new java.awt.Color(204, 0, 204));
        jButtonDescanso4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonDescanso4.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDescanso4.setText("Descansito");
        jButtonDescanso4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDescanso4ActionPerformed(evt);
            }
        });

        jButtonCapRojo.setBackground(new java.awt.Color(51, 51, 51));
        jButtonCapRojo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCapRojo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCapRojo.setText("Lanzar caparazón rojo");
        jButtonCapRojo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCapRojoActionPerformed(evt);
            }
        });

        jButtonCapVerde.setBackground(new java.awt.Color(51, 51, 51));
        jButtonCapVerde.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonCapVerde.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCapVerde.setText("Lanzar caparazón verde");
        jButtonCapVerde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCapVerdeActionPerformed(evt);
            }
        });

        jButtonFondo.setBackground(new java.awt.Color(51, 51, 51));
        jButtonFondo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonFondo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonFondo.setText("Desactivar fondo");
        jButtonFondo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonFondo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFondoActionPerformed(evt);
            }
        });

        jLabelMensajeFinal.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabelMensajeFinal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelMario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelMario.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMario.setText("Mario");

        jLabelYoshi.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelYoshi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelYoshi.setText("Yoshi");
        jLabelYoshi.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabelDK.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelDK.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDK.setText("DonkeyKong");

        jLabelPeach.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelPeach.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelPeach.setText("Peach");

        jButtonEmpezar.setBackground(new java.awt.Color(51, 51, 51));
        jButtonEmpezar.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonEmpezar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEmpezar.setText("EMPEZAR CARRERA");
        jButtonEmpezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmpezarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jButtonCapVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelMensajeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonCapRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabelYoshi, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelMario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelDK, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelPeach, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(Progress3, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Progress4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(Progress1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Progress2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(75, 75, 75)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(107, 107, 107)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonDescanso4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonDescanso3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonDescanso2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonDescanso1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(290, 290, 290)
                        .addComponent(jButtonFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(480, 480, 480)
                        .addComponent(jButtonEmpezar, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMario, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Progress1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDescanso1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelYoshi, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Progress2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDescanso2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Progress3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDescanso3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Progress4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonDescanso4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonCapRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelMensajeFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPeach, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jButtonCapVerde, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButtonFondo)
                .addGap(18, 18, 18)
                .addComponent(jButtonEmpezar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que se activa al pulsar el JButtonCapVerde. Manda a boxes 3 segundos a un personaje aleatorio.
     * @param evt Evento del botón.
     */
    private void jButtonCapVerdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCapVerdeActionPerformed
        Personaje[] personajes = {personaje1, personaje2, personaje3, personaje4}; // Lista de personajes.
        Random random = new Random(); 
        int personajeIndice = random.nextInt(personajes.length); // Se escoge un personaje aleatorio.
        
        Personaje personajeNoqueado = personajes[personajeIndice];
        personajeNoqueado.setBoxes(true); // Se le pone el atributo de boxes a true.
        personajeNoqueado.setCaparazon(true); // Se pone a true el atributo del caparazón.
        timer(personajeNoqueado, 3000); // Se para por 3 segundos.
    }//GEN-LAST:event_jButtonCapVerdeActionPerformed

    /**
     * Método que se activa al pulsar el JButton1. Este método manda a boxes al personaje Mario durante 5 segundos.
     * @param evt Evento del bóton.
     */
    private void jButtonDescanso1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescanso1ActionPerformed
        personaje1.setBoxes(true);
        timer(personaje1, 5000); // Se para por 5 segundos.
    }//GEN-LAST:event_jButtonDescanso1ActionPerformed

    /**
     * Método que se activa al pulsar el JButton2. Este método manda a boxes al personaje Yoshi durante 5 segundos.
     * @param evt Evento del bóton.
     */
    private void jButtonDescanso2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescanso2ActionPerformed
        personaje2.setBoxes(true);
        timer(personaje2, 5000); // Se para por 5 segundos.
    }//GEN-LAST:event_jButtonDescanso2ActionPerformed

    /**
     * Método que se activa al pulsar el JButton3. Este método manda a boxes al personaje DonkeyKong durante 5 segundos.
     * @param evt Evento del bóton.
     */
    private void jButtonDescanso3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescanso3ActionPerformed
        personaje3.setBoxes(true);
        timer(personaje3, 5000); // Se para por 5 segundos.
    }//GEN-LAST:event_jButtonDescanso3ActionPerformed

    /**
     * Método que se activa al pulsar el JButton4. Este método manda a boxes al personaje Peach durante 5 segundos.
     * @param evt Evento del bóton.
     */
    private void jButtonDescanso4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDescanso4ActionPerformed
        personaje4.setBoxes(true); 
        timer(personaje4, 5000); // Se para por 5 segundos.
    }//GEN-LAST:event_jButtonDescanso4ActionPerformed

    /**
     * Método que se activa al pulsar el botón JButtonFondo. Este método activa el fondo aleatorio si esta inactivo, y viceversa.
     * @param evt Evento del botón.
     */
    private void jButtonFondoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFondoActionPerformed
        fondo.setActivo(!fondo.getActivo()); // Se invierte el atributo "activo".
    
        if (fondo.getActivo()) {
            // Si activamos el fondo, necesitamos lanzar un nuevo hilo
            jButtonFondo.setText("Desactivar fondo");
            Thread hiloFondo = new Thread(fondo);
            hiloFondo.start();
        } else {
            jButtonFondo.setText("Activar fondo");
        } 
        
    }//GEN-LAST:event_jButtonFondoActionPerformed

    /**
     * Método que se activa al pulsar el JButtonEmpezar. Este comprueba si el booleano de "carreraEnCurso" está activo. Si es así, sale del método. En caso contrario, le da valor true,
     * reiniciar el estado de los componentes de la interfaz, y vuelve a ejecutar los hilos del programa.
     * @param evt Evento del botón.
     */ 
    private void jButtonEmpezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmpezarActionPerformed
        if (carreraEnCurso) {
            return;
        }
        
        carreraEnCurso = true;
        reiniciarEstadoInicial();
        ejecutarHilos();
    }//GEN-LAST:event_jButtonEmpezarActionPerformed

    /**
     * Método que se activa al pulsar el JButtonCapRojo. Este método busca al líder de la carrera y lo manda a boxes 3 segundos.
     * @param evt Evento del botón.
     */
    private void jButtonCapRojoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCapRojoActionPerformed
        Personaje personajeEnCabeza = encontrarLider();
        if (personajeEnCabeza != null) {
            personajeEnCabeza.setBoxes(true);
            personajeEnCabeza.setCaparazon(true);
            timer(personajeEnCabeza, 3000);
        }
    }//GEN-LAST:event_jButtonCapRojoActionPerformed

    /**
     * Método que hace esperar al personaje en boxes el tiempo que se le pase por parámetros.
     * @param personaje Personaje el cual se quiere parar.
     * @param tiempoMs Tiempo total que se quiere parar al personaje.
     */
    private void timer(Personaje personaje, int tiempoMs) {
        // Desactiva al personaje por el tiempo especificado (en milisegundos)
        Timer timer = new Timer(tiempoMs, e -> personaje.setBoxes(false));  // Reactiva después de 3 segundos
        timer.setRepeats(false);
        timer.start();
    }
    
    /**
     * Esta función devuelve el líder de la carrera, es decir, el personaje que tenga más vueltas dadas, así como el que más progreso tenga en su JProgressBar.
     * @return Personaje líder de la carrera.
     */
    private Personaje encontrarLider() {
        Personaje[] personajes = {personaje1, personaje2, personaje3, personaje4}; // Lista de personajes.
        ArrayList<Personaje> lideres = new ArrayList<Personaje>(); // Lista de líderes.
        int maxVueltas = -1; // Número máximo de vueltas.
        int maxProgreso = -1; // Número máximo de progreso.
        
        for (Personaje personaje : personajes) { // Recorremos todos los personajes.
            int vueltasPersonaje = personaje.getNVueltas(); // Recuperamos las vueltas del personaje.
            int progresoPersonaje = personaje.getProgressBar().getValue(); // Recuperamos el progreso del personaje.
            
            if (vueltasPersonaje > maxVueltas) { // Se comprueba si las vueltas del personaje son mayores a las vueltas máximas.
                maxVueltas = vueltasPersonaje; // Se asigna el valor de las vueltas del personaje a las vueltas máximas.
                maxProgreso = progresoPersonaje; // Lo mismo con el progreso.
                lideres.clear(); // Se limpia la lista de lideres
                lideres.add(personaje); // Y se añade el nuevo líder.
            } else if (vueltasPersonaje == maxVueltas) { // Si encontramos un personaje que tenga las mismas vueltas que las máximas, comprobamos su progreso.
                if (progresoPersonaje > maxProgreso) { // Si es mayor 
                    maxProgreso = progresoPersonaje; // Establecemos el progreso del jugador al progeso máximo.
                    lideres.clear(); // Eliminamos los líderes
                    lideres.add(personaje); // Añadimos el nuevo líder.
                } else if (progresoPersonaje == maxProgreso) { // En caso de empate, añadimos el personaje a la lista de líderes.
                    lideres.add(personaje);
                }
            }
        }
        
        if (lideres.size() > 1) { // En caso de que haya mas de un líder, escogemos uno aleatorio.
            Random random = new Random();
            return lideres.get(random.nextInt(lideres.size()));
        }
        return null;
    }
    
    /**
     * Método privado que reestablecer los componentes de la interfaz a su valor predeterminado.
     */
    private void reiniciarEstadoInicial() {
        Progress1.setValue(0);
        Progress2.setValue(0);
        Progress3.setValue(0);
        Progress4.setValue(0);
        
        jLabel1.setText("1/3");
        jLabel2.setText("1/3");
        jLabel3.setText("1/3");
        jLabel4.setText("1/3");
        
        jLabelMensajeFinal.setText("");
        
        personaje1.reiniciar();
        personaje2.reiniciar();
        personaje3.reiniciar();
        personaje4.reiniciar();
        
        jButtonEmpezar.setEnabled(true);
    }
    
    /**
     * Método privado que inicializa los atributos de la ventana.
     */
    private void iniciarPersonajesYFondo() {
       personaje1 = new Personaje(Progress1, "Mario", false, 0, jLabel1, false, false, jLabelMensajeFinal, this); // Crea personaje
       personaje2 = new Personaje(Progress2, "Yoshi", false, 0, jLabel2, false, false, jLabelMensajeFinal, this); // Crea personaje
       personaje3 = new Personaje(Progress3, "DonkeyKong", false, 0, jLabel3, false, false, jLabelMensajeFinal, this); // Crea personaje
       personaje4 = new Personaje(Progress4, "Peach", false, 0, jLabel4, false, false, jLabelMensajeFinal, this); // Crea personaje
       fondo = new Fondo(this, true); // Crea fondo
       ejecutarHiloFondo();
   }

    /**
     * Método privado que ejecuta los hilos de los personajes.
     */
    private void ejecutarHilos() {
       try {
           Thread hilo1 = new Thread(personaje1);
           Thread hilo2 = new Thread(personaje2);
           Thread hilo3 = new Thread(personaje3);
           Thread hilo4 = new Thread(personaje4);

           hilo1.start();
           hilo2.start();
           hilo3.start();
           hilo4.start();

       } catch (Exception ex) {
           System.out.println(ex.getMessage());
       }
    }
    
    /**
     * Método privado que ejecuta el hijo del fondo.
     */
    private void ejecutarHiloFondo() {
        Thread hiloFondo = new Thread(fondo);
        
        hiloFondo.start();
    }
    
    /**
     * Metodo privado que carga las imagénes de nuestra interfaz
     */
    private void cargarImagenes(){
        // Como los tamaños de los JLabel son iguales, solo sacamos el de uno.
        Dimension d = jLabelMario.getSize();
        int alto = d.height; // Recuperamos alto del JLabel.
        int ancho = d.width; // Recuperamos ancho del JLabel.

        // Mario
        ImageIcon iconMario = new ImageIcon("img\\mario.png"); // Creamos un nuevo icono.
        Image imgMario = iconMario.getImage(); // Luego, creamos una nueva imagen.
        Image nuevaImagenMario = imgMario.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH); // Establecemos el tamaño de la imagen al tamaño del JLabel.
        Icon nuevoIconoMario = new ImageIcon(nuevaImagenMario); // Creamos el icono con el tamaño correcto.
        jLabelMario.setIcon(nuevoIconoMario); // Establecemos el icono al JLabel
        jLabelMario.removeAll(); // Eliminamos lo que tenga el JLabel.
        jLabelMario.repaint(); // Pintamos de nuevo el componente con el icono.
        
        // Yoshi
        ImageIcon iconYoshi= new ImageIcon("img\\yoshi.png");
        Image imgYoshi = iconYoshi.getImage();
        Image nuevaImagenYoshi = imgYoshi.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH);
        Icon nuevoIconoYoshi = new ImageIcon(nuevaImagenYoshi);
        jLabelYoshi.setIcon(nuevoIconoYoshi);
        jLabelYoshi.removeAll();
        jLabelYoshi.repaint();
        
        // DonkeyKong
        ImageIcon iconDK = new ImageIcon("img\\donkeyKong.png");
        Image imgDK = iconDK.getImage();
        Image nuevaImagenDK = imgDK.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH);
        Icon nuevoIconoDK = new ImageIcon(nuevaImagenDK);
        jLabelDK.setIcon(nuevoIconoDK);
        jLabelDK.removeAll();
        jLabelDK.repaint();
        
        // Peach
        ImageIcon iconPeach = new ImageIcon("img\\peach.png");
        Image imgPeach = iconPeach.getImage();
        Image nuevaImagenPeach = imgPeach.getScaledInstance(ancho, alto, Image.SCALE_SMOOTH);
        Icon nuevoIconoPeach = new ImageIcon(nuevaImagenPeach);
        jLabelPeach.setIcon(nuevoIconoPeach);
        jLabelPeach.removeAll();
        jLabelPeach.repaint();
        
        // Para los caparazones tenemos otra dimensión diferente
        Dimension d2 = jButtonCapVerde.getSize();
        int anchoCap = d2.width; // Recuperamos el ancho de JButton.
        int altoCap = d2.height; // Recuperamos el alto de JButton.
        
        // Caparazón Verde
        ImageIcon iconCapVerde = new ImageIcon("img\\capVerde.png");
        Image imgCapVerde = iconCapVerde.getImage();
        Image nuevaImagenCapVerde = imgCapVerde.getScaledInstance(anchoCap, altoCap, Image.SCALE_SMOOTH);
        Icon nuevoIconoCapVerde = new ImageIcon(nuevaImagenCapVerde);
        jButtonCapVerde.setIcon(nuevoIconoCapVerde);
        jButtonCapVerde.setText("");
        
        // Código para hacer el botón del tamaño de la imagen.
        jButtonCapVerde.setBorderPainted(false); // Eliminamos borde del botón
        jButtonCapVerde.setContentAreaFilled(false); // Hacer el botón no opaco para poder eliminar el fondo.
        jButtonCapVerde.setOpaque(false); // Evitar que el botón se vea cuando no está activo.
        jButtonCapVerde.setPreferredSize(new Dimension(nuevaImagenCapVerde.getWidth(null), nuevaImagenCapVerde.getHeight(null))); // Establecer el tamaño del botón al tamaño de la imagen.
        jButtonCapVerde.repaint();
        
        // Caparazón Rojo
        ImageIcon iconCapRojo = new ImageIcon("img\\capRojo.png");
        Image imgCapRojo = iconCapRojo.getImage();
        Image nuevaImagenCapRojo = imgCapRojo.getScaledInstance(anchoCap, altoCap, Image.SCALE_SMOOTH);
        Icon nuevoIconoCapRojo = new ImageIcon(nuevaImagenCapRojo);
        jButtonCapRojo.setIcon(nuevoIconoCapRojo);
        jButtonCapRojo.setText("");
        
        jButtonCapRojo.setBorderPainted(false);
        jButtonCapRojo.setContentAreaFilled(false);
        jButtonCapRojo.setOpaque(false);
        jButtonCapRojo.setPreferredSize(new Dimension(nuevaImagenCapVerde.getWidth(null), nuevaImagenCapVerde.getHeight(null)));
        jButtonCapRojo.repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventanaPrincipal().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar Progress1;
    private javax.swing.JProgressBar Progress2;
    private javax.swing.JProgressBar Progress3;
    private javax.swing.JProgressBar Progress4;
    private javax.swing.JButton jButtonCapRojo;
    private javax.swing.JButton jButtonCapVerde;
    private javax.swing.JButton jButtonDescanso1;
    private javax.swing.JButton jButtonDescanso2;
    private javax.swing.JButton jButtonDescanso3;
    private javax.swing.JButton jButtonDescanso4;
    private javax.swing.JButton jButtonEmpezar;
    private javax.swing.JButton jButtonFondo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelDK;
    private javax.swing.JLabel jLabelMario;
    private javax.swing.JLabel jLabelMensajeFinal;
    private javax.swing.JLabel jLabelPeach;
    private javax.swing.JLabel jLabelYoshi;
    // End of variables declaration//GEN-END:variables
}
